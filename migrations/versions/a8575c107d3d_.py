"""empty message

Revision ID: a8575c107d3d
Revises: 5b68b28e338a
Create Date: 2025-08-05 14:21:02.456112

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'a8575c107d3d'
down_revision: Union[str, Sequence[str], None] = '5b68b28e338a'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('admin',
    sa.Column('admin_id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=20), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('password', sa.String(length=255), nullable=False),
    sa.Column('phone_number', sa.String(length=20), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('admin_id', name=op.f('pk_admin')),
    sa.UniqueConstraint('email', name=op.f('uq_admin_email'))
    )
    op.create_table('user',
    sa.Column('user_id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=20), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('password', sa.String(length=255), nullable=False),
    sa.Column('address', sa.String(length=255), nullable=True),
    sa.Column('role', sa.Enum('GROUP', 'USER', name='userrole'), nullable=False),
    sa.Column('phone_number', sa.String(length=20), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('user_id', name=op.f('pk_user')),
    sa.UniqueConstraint('email', name=op.f('uq_user_email'))
    )
    op.create_table('donor_requests',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('recipient_id', sa.BigInteger(), nullable=False),
    sa.Column('recipient_status', sa.Enum('PENDING', 'APPROVED', 'REJECTED', name='recipientstatus'), nullable=False),
    sa.Column('requested_at', sa.DateTime(), nullable=False),
    sa.Column('delivery_status', sa.Enum('PREPARING', 'ONGOING', 'COMPLETED', name='deliverystatus'), nullable=False),
    sa.ForeignKeyConstraint(['recipient_id'], ['user.user_id'], name=op.f('fk_donor_requests_recipient_id_user')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_donor_requests'))
    )
    op.create_table('toy_stock',
    sa.Column('toy_id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('donor_id', sa.BigInteger(), nullable=False),
    sa.Column('toy_name', sa.String(length=100), nullable=False),
    sa.Column('toy_type', sa.String(length=50), nullable=True),
    sa.Column('image_url', sa.String(length=500), nullable=True),
    sa.Column('is_donatable', sa.Enum('IMPOSSIBLE', 'RECYCLABLE', 'UPCYCLE', name='donationstatus'), nullable=False),
    sa.Column('reject_reason', sa.Text(), nullable=True),
    sa.Column('glb_model_url', sa.String(length=500), nullable=True),
    sa.Column('donor_status', sa.Enum('PENDING', 'APPROVED', 'REJECTED', 'DONATED', 'DISCARDED', name='donorstatus'), nullable=False),
    sa.Column('reserved_by_request_id', sa.BigInteger(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['donor_id'], ['user.user_id'], name=op.f('fk_toy_stock_donor_id_user')),
    sa.ForeignKeyConstraint(['reserved_by_request_id'], ['donor_requests.id'], name=op.f('fk_toy_stock_reserved_by_request_id_donor_requests')),
    sa.PrimaryKeyConstraint('toy_id', name=op.f('pk_toy_stock'))
    )
    op.create_table('donor_requests_item',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('requested_id', sa.BigInteger(), nullable=False),
    sa.Column('toy_stock_id', sa.BigInteger(), nullable=False),
    sa.ForeignKeyConstraint(['requested_id'], ['donor_requests.id'], name=op.f('fk_donor_requests_item_requested_id_donor_requests')),
    sa.ForeignKeyConstraint(['toy_stock_id'], ['toy_stock.toy_id'], name=op.f('fk_donor_requests_item_toy_stock_id_toy_stock')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_donor_requests_item'))
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('donor_requests_item')
    op.drop_table('toy_stock')
    op.drop_table('donor_requests')
    op.drop_table('user')
    op.drop_table('admin')
    # ### end Alembic commands ###
