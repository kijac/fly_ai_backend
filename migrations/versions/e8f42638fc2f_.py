"""empty message

Revision ID: e8f42638fc2f
Revises: b674f23835fe
Create Date: 2025-08-14 13:21:03.799726

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision: str = 'e8f42638fc2f'
down_revision: Union[str, Sequence[str], None] = 'b674f23835fe'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('admin', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('uq_admin_email'))

    op.drop_table('admin')
    with op.batch_alter_table('donor_requests', schema=None) as batch_op:
        batch_op.add_column(sa.Column('total_price', sa.BigInteger(), nullable=True))

    with op.batch_alter_table('donor_requests_item', schema=None) as batch_op:
        batch_op.add_column(sa.Column('unit_price', sa.BigInteger(), nullable=True))

    with op.batch_alter_table('toy_stock', schema=None) as batch_op:
        batch_op.add_column(sa.Column('user_id', sa.BigInteger(), nullable=False))
        batch_op.add_column(sa.Column('toy_status', sa.Enum('PENDING', 'FOR_SALE', 'REJECTED', 'DONATION', 'END_BUY', name='toystatus'), nullable=False))
        batch_op.add_column(sa.Column('reserved_by_request_id', sa.BigInteger(), nullable=True))
        batch_op.add_column(sa.Column('sale_price', sa.BigInteger(), nullable=True))
        batch_op.add_column(sa.Column('purchase_price', sa.BigInteger(), nullable=True))
        batch_op.alter_column('toy_name',
               existing_type=mysql.VARCHAR(length=100),
               nullable=True)
        batch_op.alter_column('image_url',
               existing_type=mysql.VARCHAR(length=500),
               type_=sa.JSON(),
               existing_nullable=True)
        batch_op.alter_column('is_donatable',
               existing_type=mysql.ENUM('IMPOSSIBLE', 'RECYCLABLE', 'UPCYCLE'),
               nullable=True)
        batch_op.alter_column('updated_at',
               existing_type=mysql.DATETIME(),
               nullable=True)
        batch_op.drop_constraint(batch_op.f('fk_toy_stock_donor_id_user'), type_='foreignkey')
        batch_op.create_foreign_key(batch_op.f('fk_toy_stock_reserved_by_request_id_donor_requests'), 'donor_requests', ['reserved_by_request_id'], ['id'])
        batch_op.create_foreign_key(batch_op.f('fk_toy_stock_user_id_user'), 'user', ['user_id'], ['user_id'])
        batch_op.drop_column('donor_id')
        batch_op.drop_column('donor_status')

    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.add_column(sa.Column('points', sa.BigInteger(), nullable=False))
        batch_op.add_column(sa.Column('subscribe', sa.Boolean(), nullable=True))
        batch_op.alter_column('role',
               existing_type=mysql.ENUM('GROUP', 'USER'),
               type_=sa.Enum('ADMIN', 'USER', name='userrole'),
               existing_nullable=False)

    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.alter_column('role',
               existing_type=sa.Enum('ADMIN', 'USER', name='userrole'),
               type_=mysql.ENUM('GROUP', 'USER'),
               existing_nullable=False)
        batch_op.drop_column('subscribe')
        batch_op.drop_column('points')

    with op.batch_alter_table('toy_stock', schema=None) as batch_op:
        batch_op.add_column(sa.Column('donor_status', mysql.ENUM('PENDING', 'APPROVED', 'REJECTED', 'DONATED', 'DISCARDED'), nullable=False))
        batch_op.add_column(sa.Column('donor_id', mysql.BIGINT(), autoincrement=False, nullable=False))
        batch_op.drop_constraint(batch_op.f('fk_toy_stock_user_id_user'), type_='foreignkey')
        batch_op.drop_constraint(batch_op.f('fk_toy_stock_reserved_by_request_id_donor_requests'), type_='foreignkey')
        batch_op.create_foreign_key(batch_op.f('fk_toy_stock_donor_id_user'), 'user', ['donor_id'], ['user_id'])
        batch_op.alter_column('updated_at',
               existing_type=mysql.DATETIME(),
               nullable=False)
        batch_op.alter_column('is_donatable',
               existing_type=mysql.ENUM('IMPOSSIBLE', 'RECYCLABLE', 'UPCYCLE'),
               nullable=False)
        batch_op.alter_column('image_url',
               existing_type=sa.JSON(),
               type_=mysql.VARCHAR(length=500),
               existing_nullable=True)
        batch_op.alter_column('toy_name',
               existing_type=mysql.VARCHAR(length=100),
               nullable=False)
        batch_op.drop_column('purchase_price')
        batch_op.drop_column('sale_price')
        batch_op.drop_column('reserved_by_request_id')
        batch_op.drop_column('toy_status')
        batch_op.drop_column('user_id')

    with op.batch_alter_table('donor_requests_item', schema=None) as batch_op:
        batch_op.drop_column('unit_price')

    with op.batch_alter_table('donor_requests', schema=None) as batch_op:
        batch_op.drop_column('total_price')

    op.create_table('admin',
    sa.Column('admin_id', mysql.BIGINT(), autoincrement=True, nullable=False),
    sa.Column('name', mysql.VARCHAR(length=20), nullable=False),
    sa.Column('email', mysql.VARCHAR(length=255), nullable=False),
    sa.Column('password', mysql.VARCHAR(length=255), nullable=False),
    sa.Column('phone_number', mysql.VARCHAR(length=20), nullable=True),
    sa.Column('created_at', mysql.DATETIME(), nullable=False),
    sa.PrimaryKeyConstraint('admin_id'),
    mysql_collate='utf8mb4_0900_ai_ci',
    mysql_default_charset='utf8mb4',
    mysql_engine='InnoDB'
    )
    with op.batch_alter_table('admin', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('uq_admin_email'), ['email'], unique=True)

    # ### end Alembic commands ###
