"""empty message

Revision ID: b674f23835fe
Revises: 23c61bf367e5
Create Date: 2025-08-14 10:47:58.801898

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision: str = 'b674f23835fe'
down_revision: Union[str, Sequence[str], None] = '23c61bf367e5'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('admin', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('uq_admin_email'))

    op.drop_table('admin')
    with op.batch_alter_table('donor_requests', schema=None) as batch_op:
        batch_op.add_column(sa.Column('total_price', sa.BigInteger(), nullable=True))
        batch_op.drop_column('created_at')

    with op.batch_alter_table('donor_requests_item', schema=None) as batch_op:
        batch_op.add_column(sa.Column('unit_price', sa.BigInteger(), nullable=True))

    with op.batch_alter_table('toy_stock', schema=None) as batch_op:
        batch_op.add_column(sa.Column('user_id', sa.BigInteger(), nullable=False))
        batch_op.add_column(sa.Column('toy_status', sa.Enum('PENDING', 'FOR_SALE', 'REJECTED', 'DONATION', 'END_BUY', name='toystatus'), nullable=False))
        batch_op.add_column(sa.Column('sale_price', sa.BigInteger(), nullable=True))
        batch_op.add_column(sa.Column('purchase_price', sa.BigInteger(), nullable=True))
        batch_op.alter_column('is_donatable',
               existing_type=mysql.ENUM('IMPOSSIBLE', 'RECYCLABLE', 'UPCYCLE', collation='utf8mb4_unicode_ci'),
               nullable=True)
        batch_op.drop_constraint(batch_op.f('fk_toy_stock_donor_id_user'), type_='foreignkey')
        batch_op.create_foreign_key(batch_op.f('fk_toy_stock_user_id_user'), 'user', ['user_id'], ['user_id'])
        batch_op.drop_column('price')
        batch_op.drop_column('donor_id')
        batch_op.drop_column('donor_status')

    # 먼저 기존 'GROUP' 값을 'USER'로 변경
    op.execute("UPDATE user SET role = 'USER' WHERE role = 'GROUP'")
    
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.alter_column('role',
               existing_type=mysql.ENUM('GROUP', 'USER', collation='utf8mb4_unicode_ci'),
               type_=sa.Enum('ADMIN', 'USER', name='userrole'),
               existing_nullable=False)

    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.alter_column('role',
               existing_type=sa.Enum('ADMIN', 'USER', name='userrole'),
               type_=mysql.ENUM('GROUP', 'USER', collation='utf8mb4_unicode_ci'),
               existing_nullable=False)

    with op.batch_alter_table('toy_stock', schema=None) as batch_op:
        batch_op.add_column(sa.Column('donor_status', mysql.ENUM('PENDING', 'APPROVED', 'REJECTED', 'DONATED', 'DISCARDED', collation='utf8mb4_unicode_ci'), nullable=False))
        batch_op.add_column(sa.Column('donor_id', mysql.BIGINT(), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('price', mysql.BIGINT(), autoincrement=False, nullable=True))
        batch_op.drop_constraint(batch_op.f('fk_toy_stock_user_id_user'), type_='foreignkey')
        batch_op.create_foreign_key(batch_op.f('fk_toy_stock_donor_id_user'), 'user', ['donor_id'], ['user_id'])
        batch_op.alter_column('is_donatable',
               existing_type=mysql.ENUM('IMPOSSIBLE', 'RECYCLABLE', 'UPCYCLE', collation='utf8mb4_unicode_ci'),
               nullable=False)
        batch_op.drop_column('purchase_price')
        batch_op.drop_column('sale_price')
        batch_op.drop_column('toy_status')
        batch_op.drop_column('user_id')

    with op.batch_alter_table('donor_requests_item', schema=None) as batch_op:
        batch_op.drop_column('unit_price')

    with op.batch_alter_table('donor_requests', schema=None) as batch_op:
        batch_op.add_column(sa.Column('created_at', mysql.DATETIME(), nullable=False))
        batch_op.drop_column('total_price')

    op.create_table('admin',
    sa.Column('admin_id', mysql.BIGINT(), autoincrement=True, nullable=False),
    sa.Column('name', mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=20), nullable=False),
    sa.Column('email', mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=255), nullable=False),
    sa.Column('password', mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=255), nullable=False),
    sa.Column('phone_number', mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=20), nullable=True),
    sa.Column('created_at', mysql.DATETIME(), nullable=False),
    sa.PrimaryKeyConstraint('admin_id'),
    mysql_collate='utf8mb4_unicode_ci',
    mysql_default_charset='utf8mb4',
    mysql_engine='InnoDB'
    )
    with op.batch_alter_table('admin', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('uq_admin_email'), ['email'], unique=True)

    # ### end Alembic commands ###
